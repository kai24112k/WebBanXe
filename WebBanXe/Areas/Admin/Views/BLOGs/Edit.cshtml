@model WebBanXe.Model.BLOG

@{
    ViewBag.Title = "Edit";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
}

<script src="~/Areas/Admin/Helpers/ckeditor/ckeditor.js"></script>
@using (Html.BeginForm("Edit", "BLOGs", FormMethod.Post, new { @enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        <div class="form-group">
            <div class="col-md-10">
                <div class="row">
                    <div class="col-md-9">
                        <h2 class="h2">CHỈNH SỬA BÀI VIẾT</h2>
                    </div>
                    <div class="col-md-3" style="text-align:right;">
                        @Html.ActionLink("QUAY LẠI", "Index")
                    </div>
                </div>
            </div>
        </div>
        @if (ViewBag.Error != null)
        {
            <div class="alert alert-danger" role="alert">
                @ViewBag.Error
            </div>
        }
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.IdBlog)

        <div class="form-group">
            <div class="col-md-10">
                <div class="row">
                    <div class="col-md-8">
                        <div class="form-group">
                            @Html.LabelFor(model => model.IdCate, "IdCate", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-12">
                                @Html.DropDownList("IdCate", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.IdCate, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                @foreach (var picture in Model.IMG_BLOG)
                {

                    <div class="col-md-4">
                        <div class="form-group">
                            <lable class="control-label col-md-2">Hình ảnh</lable>
                            <div class="col-md-12">
                                <input type="file" name="fileUpload" id="fileUpload">
                                <div class="image-preview" id="imagePreview">
                                    <img src="@picture.LinkImg" alt="Image Preview" class="image-preview-img " style="display:block;" />

                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Content, htmlAttributes: new { @class = "control-label col-md-5" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.Content, new { htmlAttributes = new { @class = "form-control" }, @id = "txtContent" })
            @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
            <script>CKEDITOR.replace("txtContent");</script>
        </div>
    </div>



    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Lưu" class="btn btn-success form-control" />
        </div>
    </div>
   
}

<script>
    var fileUpload = document.getElementById("fileUpload");
    var previewContainer = document.getElementById("imagePreview");
    var previewImage = previewContainer.querySelector(".image-preview-img");


    fileUpload.addEventListener("change", function () {
        var file = this.files[0];
        if (file) {
            var reader = new FileReader();

            previewImage.style.display = "block";
            reader.readAsDataURL(file);
            reader.addEventListener("load", function () {
                previewImage.setAttribute("src", this.result);
            });
        }
        else {

            previewImage.style.display = null;
            previewImage.setAttribute("src", this.result);
        }
    });
</script>
